
version: '3'
services:
  nats-server:
    image: nats:latest
    ports:
      - 4222:4222
      - 8222:8222
      - 6222:6222
    networks:
      - backend-network

  db:
    container_name: db
    image: postgres:16.3-alpine3.20
    restart: always
    volumes:
      - ./database/postgres:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
    networks:
      - backend-network

  client-gateway:
    build: ./client-gateway
    ports:
      - ${PORT_CLIENT_GATEWAY}:3000
    restart: always
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    environment:
      - PORT=3000
      - NODE_ENV=${NODE_ENV}
      - NATS_SERVERS=nats://nats-server:4222
    networks:
      - backend-network

  auth-ms:
    build:
      context: ./auth-ms
      args:
        - DB_URL=${DB_URL}
    restart: always
    depends_on:
      - nats-server
      - db
      - client-gateway
    volumes:
      - ./auth-ms/src:/usr/src/app/src
    environment:
      - PORT=3001
      - NODE_ENV=${NODE_ENV}
      - NATS_SERVERS=nats://nats-server:4222
      - DB_URL=${DB_URL}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - backend-network

  user-ms:
    build:
      context: ./user-ms
      args:
        - DB_URL=${DB_URL}
    restart: always
    depends_on:
      - nats-server
      - db
      - client-gateway
    volumes:
      - ./user-ms/src:/usr/src/app/src
    environment:
      - PORT=3001
      - NODE_ENV=${NODE_ENV}
      - NATS_SERVERS=nats://nats-server:4222
      - DB_URL=${DB_URL}
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge
